{
  "swagger": "2.0",
  "info": {
    "description": "dbAPI subscription service. Provides an API to manage subscriptions of certains events like transaction creation.",
    "version": "v1",
    "title": "dbapi-subscriptions",
    "termsOfService": "https://developer.db.com/#/contact",
    "contact": { "email": "bank.api@db.com" },
    "license": {}
  },
  "host": "simulator-api.db.com:443",
  "basePath": "/gw/dbapi/notifications/subscriptions/v1",
  "tags": [
    { "name": "Subscription", "description": "Activation Api Controller" }
  ],
  "schemes": ["https"],
  "paths": {
    "/transactions": {
      "get": {
        "tags": ["Subscription"],
        "summary": "Get all transaction subcriptions",
        "description": "Get all transaction subcriptions for the current user",
        "operationId": "transactionsGet",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "iban",
            "in": "query",
            "description": "IBAN representing an account of the current user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit defines count of resources per request/page.",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "pagination depending on the query parameter limit. Defines current page offset, starting with 0, default 0",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "type": "string",
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "originalRef": "#/definitions/PagedResultSubscription",
              "$ref": "#/definitions/PagedResultSubscription"
            },
            "responseSchema": {
              "originalRef": "#/definitions/PagedResultSubscription",
              "$ref": "#/definitions/PagedResultSubscription"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            },
            "responseSchema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [
          { "api_auth_code": ["transaction_notifications"] },
          { "api_implicit": ["transaction_notifications"] }
        ]
      },
      "post": {
        "tags": ["Subscription"],
        "summary": "Creates a transaction event subcription",
        "description": "Creates a subscription for transaction events.",
        "operationId": "transactionsPost",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "Idempotency-ID",
            "in": "header",
            "description": "Unique identifier that the caller provides to establish idempotency for this request.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "createSubscription",
            "description": "Input parameters to create a subscription",
            "required": true,
            "schema": {
              "originalRef": "#/definitions/SubscriptionPost",
              "$ref": "#/definitions/SubscriptionPost"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "type": "string",
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "originalRef": "#/definitions/Subscription",
              "$ref": "#/definitions/Subscription"
            },
            "responseSchema": {
              "originalRef": "#/definitions/Subscription",
              "$ref": "#/definitions/Subscription"
            }
          },
          "201": {
            "description": "successful operation",
            "schema": {
              "originalRef": "#/definitions/Subscription",
              "$ref": "#/definitions/Subscription"
            },
            "responseSchema": {
              "originalRef": "#/definitions/Subscription",
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            },
            "responseSchema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" },
          "404": { "description": "Not Found" }
        },
        "security": [
          { "api_auth_code": ["transaction_notifications"] },
          { "api_implicit": ["transaction_notifications"] }
        ]
      }
    },
    "/transactions/{subscriptionId}": {
      "delete": {
        "tags": ["Subscription"],
        "summary": "Deletes a transaction subcription",
        "description": "Deletes a transaction subcription",
        "operationId": "transactionsSubscriptionIdDelete",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "ID of the resource",
            "required": true,
            "type": "string"
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "type": "string",
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "type": "object" },
            "responseSchema": { "type": "object" }
          },
          "204": {
            "description": "successful operation",
            "schema": { "type": "object" },
            "responseSchema": { "type": "object" }
          },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            },
            "responseSchema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        },
        "security": [
          { "api_auth_code": ["transaction_notifications"] },
          { "api_implicit": ["transaction_notifications"] }
        ]
      },
      "patch": {
        "tags": ["Subscription"],
        "summary": "Updates a transaction subcription",
        "description": "Updates a transaction subcription",
        "operationId": "transactionsSubscriptionIdPatch",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "ID of the resource",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "subscriptionBody",
            "description": "Input parameters to create a subscription",
            "required": true,
            "schema": {
              "originalRef": "#/definitions/SubscriptionPatch",
              "$ref": "#/definitions/SubscriptionPatch"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "type": "string",
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "originalRef": "#/definitions/Subscription",
              "$ref": "#/definitions/Subscription"
            },
            "responseSchema": {
              "originalRef": "#/definitions/Subscription",
              "$ref": "#/definitions/Subscription"
            }
          },
          "204": { "description": "No Content" },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            },
            "responseSchema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        },
        "security": [
          { "api_auth_code": ["transaction_notifications"] },
          { "api_implicit": ["transaction_notifications"] }
        ]
      }
    },
    "/{subscriptionId}": {
      "patch": {
        "tags": ["Subscription"],
        "summary": "Activate subscription",
        "description": "Activate subscription notification url",
        "operationId": "subscriptionActivation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "activation",
            "description": "activation",
            "required": true,
            "schema": {
              "originalRef": "#/definitions/ActivationDTO",
              "$ref": "#/definitions/ActivationDTO"
            }
          },
          {
            "name": "Correlation-Id",
            "in": "header",
            "description": "Free form key controlled by the caller e.g. uuid",
            "required": false,
            "type": "string",
            "maxLength": 50
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "type": "object" },
            "responseSchema": { "type": "object" }
          },
          "204": { "description": "No Content" },
          "400": {
            "description": "unsuccessful operation",
            "schema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            },
            "responseSchema": {
              "originalRef": "#/definitions/ErrorResponse",
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden" }
        },
        "security": [
          { "api_auth_code": ["transaction_notifications"] },
          { "api_implicit": ["transaction_notifications"] }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_auth_code": {
      "type": "oauth2",
      "authorizationUrl": "https://simulator-api.db.com/gw/oidc/authorize",
      "tokenUrl": "https://simulator-api.db.com/gw/oidc/token",
      "flow": "accessCode",
      "scopes": {
        "transaction_notifications": "Enable the subscription feature",
        "openid": "Request access to OpenId Connect functionality",
        "offline_access": "Request an OAuth2 Refresh Token"
      }
    },
    "api_implicit": {
      "type": "oauth2",
      "authorizationUrl": "https://simulator-api.db.com/gw/oidc/authorize",
      "flow": "implicit",
      "scopes": {
        "transaction_notifications": "Enable the subscription feature",
        "openid": "Request access to OpenId Connect functionality"
      }
    }
  },
  "definitions": {
    "ActivationDTO": {
      "type": "object",
      "properties": { "activationCode": { "type": "string" } }
    },
    "ErrorResponse": {
      "type": "object",
      "required": ["code", "message"],
      "properties": {
        "code": { "type": "string", "description": "The error code" },
        "message": {
          "type": "string",
          "description": "Description of the belonging error code."
        }
      },
      "description": "Default error response message"
    },
    "PagedResultSubscription": {
      "type": "object",
      "required": ["items", "totalItems"],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "originalRef": "#/definitions/Subscription",
            "$ref": "#/definitions/Subscription"
          }
        },
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of items found for your request parameters over all pages of the pagination."
        }
      }
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "filterCriteria": {
          "originalRef": "#/definitions/SubscriptionFilterCriteria",
          "$ref": "#/definitions/SubscriptionFilterCriteria"
        },
        "id": { "type": "string", "description": "ID of the resource" },
        "subscriptionDetails": {
          "originalRef": "#/definitions/SubscriptionDetails",
          "$ref": "#/definitions/SubscriptionDetails"
        }
      }
    },
    "SubscriptionDetails": {
      "type": "object",
      "required": ["notificationURL", "subscriptionType"],
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "The date, when a subscription expires. Format: YYYY-MM-DD"
        },
        "isActive": { "type": "boolean", "example": false },
        "notificationURL": {
          "type": "string",
          "description": "The URL the notification will be passed towards."
        },
        "subscriptionType": {
          "type": "string",
          "description": "Type of subscription",
          "enum": ["one-time", "recurring"]
        }
      },
      "description": "Subscription details"
    },
    "SubscriptionFilterCriteria": {
      "type": "object",
      "required": ["iban"],
      "properties": {
        "iban": {
          "type": "string",
          "description": "IBAN of the account to subscribe to."
        },
        "incoming": {
          "type": "boolean",
          "example": false,
          "description": "true, if events shall be filtered for incoming transactions, false if not."
        },
        "maxAmount": {
          "type": "number",
          "description": "events will be filtered for a transactions amount, absolute values only."
        },
        "minAmount": {
          "type": "number",
          "description": "events will be filtered for a transaction amount, absolute values only."
        },
        "outgoing": {
          "type": "boolean",
          "example": false,
          "description": "true, if events shall be filtered for outgoing transactions, false if not."
        }
      },
      "description": "Filter criteria"
    },
    "SubscriptionPatch": {
      "type": "object",
      "required": ["subscriptionDetails"],
      "properties": {
        "subscriptionDetails": {
          "originalRef": "#/definitions/SubscriptionPatchSubscriptionDetails",
          "$ref": "#/definitions/SubscriptionPatchSubscriptionDetails"
        }
      }
    },
    "SubscriptionPatchSubscriptionDetails": {
      "type": "object",
      "required": ["expirationDate"],
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "The date, when a subscription expires. Format: YYYY-MM-DD"
        }
      },
      "description": "Subscription details"
    },
    "SubscriptionPost": {
      "type": "object",
      "properties": {
        "filterCriteria": {
          "originalRef": "#/definitions/SubscriptionFilterCriteria",
          "$ref": "#/definitions/SubscriptionFilterCriteria"
        },
        "subscriptionDetails": {
          "originalRef": "#/definitions/SubscriptionPostDetails",
          "$ref": "#/definitions/SubscriptionPostDetails"
        }
      }
    },
    "SubscriptionPostDetails": {
      "type": "object",
      "required": ["notificationURL", "subscriptionType"],
      "properties": {
        "expirationDate": {
          "type": "string",
          "format": "date",
          "description": "The date, when a subscription expires. Format: YYYY-MM-DD"
        },
        "notificationURL": {
          "type": "string",
          "description": "The URL the notification will be passed towards."
        },
        "subscriptionType": {
          "type": "string",
          "description": "Type of subscription?",
          "enum": ["one-time", "recurring"]
        }
      },
      "description": "Subscription details"
    }
  }
}
